{
	"info": {
		"_postman_id": "e9ac33f7-8ec6-4aac-bcc8-da0bfe69b59b",
		"name": "Get Books",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26152173",
		"_collection_link": "https://bold-flare-502356.postman.co/workspace/My-Workspace~857083f0-91a2-44b1-8c9d-b1faae06b891/collection/26152173-e9ac33f7-8ec6-4aac-bcc8-da0bfe69b59b?action=share&creator=26152173&source=collection_link"
	},
	"item": [
		{
			"name": "Get All Books",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"console.log(response[2].name);\r",
							"\r",
							"pm.test(\"Body matches type\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"The Russian\");\r",
							"});\r",
							"pm.test(\"Body matches type\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Just as I Am\");\r",
							"});\r",
							"pm.test(\"Body matches type\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"The Vanishing Half\");\r",
							"});\r",
							"pm.test(\"Body matches type\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"The Midnight Library\");\r",
							"});\r",
							"pm.test(\"Body matches type\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Untamed\");\r",
							"});\r",
							"pm.test(\"Body matches type\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Viscount Who Loved Me\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurlbook}}/books",
					"host": [
						"{{baseurlbook}}"
					],
					"path": [
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get - valid Book Types",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is not 200\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches type\", function () {\r",
							"    pm.expect(pm.response.text()).to.not.include(\"the Midnight Library\");\r",
							"});\r",
							"pm.test(\"Body matches type\", function () {\r",
							"    pm.expect(pm.response.text()).to.not.include(\"The Vanishing Half\");\r",
							"});\r",
							"pm.test(\"Body matches type\", function () {\r",
							"    pm.expect(pm.response.text()).to.not.include(\"Viscount Who Loved Me\");\r",
							"});\r",
							"pm.test(\"Body matches type\", function () {\r",
							"    pm.expect(pm.response.text()).to.not.include(\"The Russian\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurlbook}}/book?type=fiction",
					"host": [
						"{{baseurlbook}}"
					],
					"path": [
						"book"
					],
					"query": [
						{
							"key": "type",
							"value": "fiction"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get - Invalid Book Types",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"\r",
							"\r",
							"pm.test(\"Body does not match type\", function () {\r",
							"    pm.expect(pm.response.text()).to.not.include(\"The Just as I Am\");\r",
							"});\r",
							"pm.test(\"Body matches type\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Just as I Am\");\r",
							"});\r",
							"pm.test(\"Body does not match type\", function () {\r",
							"    pm.expect(pm.response.text()).to.not.include(\"The Vanishing Half\");\r",
							"});\r",
							"pm.test(\"Body does not match type\", function () {\r",
							"    pm.expect(pm.response.text()).to.not.include(\"The Midnight Library\");\r",
							"});\r",
							"pm.test(\"Body matches type\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Untamed\");\r",
							"});\r",
							"pm.test(\"Body does not match type\", function () {\r",
							"    pm.expect(pm.response.text()).to.not.include(\"Viscount Who Loved Me\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurlbook}}/books?type=non-fiction",
					"host": [
						"{{baseurlbook}}"
					],
					"path": [
						"books"
					],
					"query": [
						{
							"key": "type",
							"value": "non-fiction"
						}
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "BaseUrlBook",
			"value": "https://simple-books-api.glitch.me"
		}
	]
}